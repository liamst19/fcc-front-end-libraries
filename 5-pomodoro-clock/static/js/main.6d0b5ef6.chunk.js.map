{"version":3,"sources":["reducers/timerReducer.js","components/TimeControl.jsx","components/PomodoroClock.jsx","App.js","store.js","index.js"],"names":["DEFAULT_STATE","sessionLength","breakLength","timeLeft","timerId","timerLabel","ticking","tickTime","time","tick","newTime","reducer","state","action","switcher","timer","id","timerVal","window","clearInterval","hasOwnProperty","type","connect","props","label","onClick","onDecrement","onIncrement","incrementSession","dispatch","decrementSession","incrementBreak","decrementBreak","startSession","tid","startBreak","console","log","startTimer","pauseTimer","switchTimer","reset","tickTimer","audioRef","useRef","useEffect","current","play","setInterval","cZero","t","minutes","seconds","formatTime","src","ref","e","pause","currentTime","App","combineReducers","timerReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d0b5ef6.chunk.js","sourcesContent":["\n\nconst MAX_MINUTES = 60;\nconst TICK = 1;\n\nconst DEFAULT_STATE = {\n  sessionLength: 25, // minutes\n  breakLength: 5,    // minutes\n  timeLeft: 25 * 60, // ms\n  timerId: null, // used to clear timer\n  timerLabel: 'Session',\n  ticking: false,\n}\n\nconst tickTime = (time, tick) => {\n  const newTime = time + tick;\n  return newTime > MAX_MINUTES ? MAX_MINUTES\n    : newTime < 1 ? 1\n    : newTime;\n}\n\nconst reducer = (state = DEFAULT_STATE, action) => {\n  const switcher = {\n    'SESSION_INCREMENT': () => {\n      const sessionLength = tickTime(state.sessionLength, TICK);\n      return ({\n      ...state,\n        sessionLength,\n        timeLeft: sessionLength * 60\n      });\n    },\n    'SESSION_DECREMENT': () => {\n      const sessionLength = tickTime(state.sessionLength, -1 * TICK);\n      return ({\n      ...state,\n        sessionLength,\n        timeLeft: sessionLength * 60\n      });\n    },\n    'BREAK_INCREMENT': () => ({\n      ...state,\n      breakLength: tickTime(state.breakLength, TICK)\n    }),\n    'BREAK_DECREMENT': () => ({\n      ...state,\n      breakLength: tickTime(state.breakLength, -1 * TICK)\n    }),\n    'START_SESSION': () =>{\n      return ({\n        ...state,\n        timerId: action.timer.id,\n        timerLabel: 'Session',\n        ticking: true\n      })\n    },\n    'START_BREAK': () =>{\n      return ({\n        ...state,\n        timerId: action.timer.id,\n        timeLeft: state.breakLength,\n        timerLabel: 'Break',\n      })\n    },\n    'START_TIMER': () => {\n      return {\n        ...state,\n        ticking: true\n      }\n    },\n    'PAUSE_TIMER': () => ({\n      ...state,\n      ticking: false,\n      timerId: null,\n    }),\n    'SWITCH_TIMER': () => {\n      const timerVal = state.timerLabel === 'Session' ?\n            {\n              timerLabel: 'Break',\n              timeLeft: state.breakLength * 60\n            }\n            : {\n              timerLabel: 'Session',\n              timeLeft: state.sessionLength * 60\n            }\n      return ({\n        ...state,\n        ...timerVal\n      })\n    },\n    'TICK_TIMER': () => {\n      const timeLeft = state.timeLeft - 1 < 0 ? -1\n            : state.timeLeft - 1;\n      return {\n        ...state,\n        timeLeft\n      }\n    },\n    'RESET': () => {\n      if(state.timerId) window.clearInterval(state.timerId);\n      return {\n        ...DEFAULT_STATE\n      };\n    }\n  }\n\n  return switcher.hasOwnProperty(action.type) ?\n    switcher[action.type]() : state;\n}\n\n\nexport const switchTimer = () => dispatch => {\n  return dispatch({\n    type: 'SWITCH_TIMER'\n  });\n}\n\nexport const tickTimer = () => dispatch => {\n  return dispatch({\n    type: 'TICK_TIMER'\n  });\n}\n\nexport const startTimer = () => dispatch => {\n  return dispatch({\n    type: 'START_TIMER'\n  })\n}\n\nexport const pauseTimer = () => dispatch => {\n  console.log('pausing session');\n  return dispatch({\n    type: 'PAUSE_TIMER'\n  })\n}\n\nexport const startSession = tid => dispatch => {\n  return dispatch({\n    type: 'START_SESSION',\n    timer: {\n      id: tid\n    }\n  })\n}\n\nexport const startBreak = timerId => dispatch => {\n  console.log('starting break', timerId);\n  return dispatch({\n    type: 'START_BREAK',\n    timer: {\n      id: timerId\n    }\n  })\n}\n\nexport const reset = () => dispatch => dispatch({\n  type: 'RESET'\n})\n\nexport const incrementSession = () => dispatch => dispatch({\n  type: 'SESSION_INCREMENT'\n});\n\nexport const decrementSession = () => dispatch => dispatch({\n  type: 'SESSION_DECREMENT'\n});\n\nexport const incrementBreak = () => dispatch => dispatch({\n  type: 'BREAK_INCREMENT'\n});\n\nexport const decrementBreak = () => dispatch => dispatch({\n  type: 'BREAK_DECREMENT'\n});\n\nexport default reducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst TimeControl = props => {\n\n  return(<div id={props.id}>\n           <div id={`${props.id}-label`}>{props.label}</div>\n           <button id={`${props.id}-decrement`}\n                   onClick={props.onDecrement}>\n             <i>-</i>\n           </button>\n           <span id={`${props.id}-length`}>{props.time}</span>\n           <button id={`${props.id}-increment`}\n                   onClick={props.onIncrement}>\n             <i>+</i>\n           </button>\n         </div>)\n}\n\nexport default connect(\n  null,\n  {}\n)(TimeControl);\n","import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  incrementSession, decrementSession,\n  incrementBreak, decrementBreak,\n  startSession, startBreak,\n  startTimer, pauseTimer, switchTimer,\n  reset, tickTimer\n} from '../reducers/timerReducer'\n\nimport TimeControl from './TimeControl';\n\nimport './PomodoroClock.css'\n\nconst PomodoroClock = ({\n  incrementSession, decrementSession,\n  incrementBreak, decrementBreak,\n  startSession, startBreak,\n  startTimer, pauseTimer, switchTimer,\n  reset, tickTimer,\n  timer\n}) => {\n  const audioRef = useRef();\n\n  useEffect(() => {\n    if(timer.timeLeft === 0){\n      audioRef.current.play();\n      switchTimer();\n    }\n  }, [timer.timeLeft]);\n\n  useEffect(() => {\n    if(timer.ticking){\n      const tid = window.setInterval(() => {\n        tickTimer()\n      }, 1000);\n      startSession(tid);\n    }\n  }, [timer.ticking]);\n\n  const handleStartStop = e => {\n    if(timer.timerId){ // pause\n      window.clearInterval(timer.timerId);\n      pauseTimer();\n    } else{ // start\n      startTimer();\n    }\n  }\n\n  const handleReset = e => {\n    audioRef.current.pause();\n    audioRef.current.currentTime = 0.0;\n    reset();\n  }\n\n  const formatTime = (time) => {\n    const cZero = t => t < 10 ? '0' + t : t;\n    const minutes = cZero((time - (time % 60)) / 60);\n    const seconds = cZero(time % 60);\n    return `${minutes}:${seconds}`;\n    // const tMs = time > 0 ? time * 1000 : 0;\n    // return new Date (tMs).toISOString().slice(14, 19);\n  };\n\n  return (<div id=\"pomodoro-clock\">\n            <div id=\"time-control\">\n              <TimeControl id=\"break\"\n                           label=\"Break\"\n                           time={timer.breakLength}\n                           onIncrement={incrementBreak}\n                           onDecrement={decrementBreak} />\n              <TimeControl id=\"session\"\n                           label=\"Session\"\n                           time={timer.sessionLength}\n                           onIncrement={incrementSession}\n                           onDecrement={decrementSession} />\n            </div>\n            <div id=\"time-display\">\n              <div id=\"timer-label\">{timer.timerLabel}</div>\n              <div id=\"time-left\">{\n                formatTime(timer.timeLeft)\n              }</div>\n              <audio src={'./bell.mp3'}\n                      ref={ audioRef }\n                      id=\"beep\"/>\n            </div>\n            <div id=\"pomodoro-buttons\">\n              <button id=\"start_stop\"\n                      onClick={handleStartStop}>{\n                        timer.ticking ? 'Pause' : 'Start'\n                      }</button>\n              <button id=\"reset\"\n                      onClick={handleReset}>Reset</button>\n            </div>\n          </div>)\n}\n\nexport default connect(\n  state => ({\n    timer: state.timer\n  }),\n  {\n    incrementSession, decrementSession,\n    incrementBreak, decrementBreak,\n    startSession, startBreak,\n    startTimer, pauseTimer, switchTimer,\n    reset, tickTimer\n  }\n)(PomodoroClock);\n","import React from 'react';\n\nimport PomodoroClock from './components/PomodoroClock';\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div>\n      <h1>PomODorO</h1>\n      <PomodoroClock />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport timerReducer from './reducers/timerReducer';\n\nconst reducer = combineReducers({\n  timer: timerReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}